#
# Copyright 2019-present Facebook. All Rights Reserved.
#
# This program file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program in a file named COPYING; if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301 USA
#

bus "i2c-0" "ast_i2c.0"
bus "i2c-1" "ast_i2c.1"
bus "i2c-2" "ast_i2c.2"
bus "i2c-3" "ast_i2c.3"
bus "i2c-4" "ast_i2c.4"
bus "i2c-5" "ast_i2c.5"
bus "i2c-6" "ast_i2c.6"
bus "i2c-7" "ast_i2c.7"
bus "i2c-8" "ast_i2c.8"
bus "i2c-9" "ast_i2c.9"
bus "i2c-10" "ast_i2c.10"
bus "i2c-11" "ast_i2c.11"
bus "i2c-12" "ast_i2c.12"
bus "i2c-13" "ast_i2c.13"
bus "i2c-14" "i2c-2-mux (chan_id 0)"
bus "i2c-15" "i2c-2-mux (chan_id 1)"
bus "i2c-16" "i2c-2-mux (chan_id 2)"
bus "i2c-17" "i2c-2-mux (chan_id 3)"
bus "i2c-18" "i2c-2-mux (chan_id 4)"
bus "i2c-19" "i2c-2-mux (chan_id 5)"
bus "i2c-20" "i2c-2-mux (chan_id 6)"
bus "i2c-21" "i2c-2-mux (chan_id 7)"

# Notes:
# All the numbers for sensors recalibration come from the schematic or linear calibrate.
# If the number is integer or it's 1 decimal place,
# the number comes from the schematic of the board.
# If the number is more than 2 decimal places, we get this value by
# sampling many set of values(read value, real value) and do linear calibration.

chip "ast_adc_hwmon-isa-0000"
# Formulas of in2/in3/in4/in5 are from resister values
# in2: 2=(3.3k+3.3k)/3.3k unit: ohm
# in3/in4/in5: 3.2=(3.3k+1.5k)/1.5k unit: ohm
     label in1 "ADC_MB_12V"
     label in2 "ADC_MB_5V"
     label in3 "ADC_MB_3V3"
     label in4 "ADC_MB_1V8"
     label in5 "ADC_MB_1V25"
     label in6 "ADC_GBox_1V"
     label in7 "ADC_AVS_1V"
     label in8 "ADC_MAC_1V"

chip "tmp75-i2c-4-4A"
     label temp1 "SMB TMP75AIDR (RF) Temp"

chip "tmp75-i2c-4-4B"
     label temp1 "SMB TMP75AIDR (LF) Temp"

chip "tmp75-i2c-4-4E"
     label temp1 "SMB TMP75AIDR Upper (MAC) Temp"

chip "tmp75-i2c-4-49"
     label temp1 "SMB TMP75AIDR Lower (MAC) Temp"


chip "ir35223-i2c-5-10"
# Formulas of in2/power2 are from resister values
# in3/power1/power3: (100+100)/100 unit: ohm
# curr3/curr4:
# Because the kernel driver return wrong value. We do a linear re-correction
# and the coefficient values are from hardware team.
     label in1 "Chip 3V3 Left Input Voltage"
     label in2 "PVDD0P8 Input Voltage"
     label in3 "Chip 3V3 Left Output Voltage"
     label in4 "PVDD0P8 Output Voltage"
     label curr1 "Chip 3V3 Left Input Current"
     label curr2 "PVDD0P8 Input Current"
     label curr3 "Chip 3V3 Left Output Current"
     label curr4 "PVDD0P8 Output Current"
     label power1 "Chip 3V3 Left Input Power"
     label power2 "PVDD0P8 Input Power"
     label power3 "Chip 3V3 Left Output Power"
     label power4 "PVDD0P8 Output Power"
     label temp1 "Chip 3V3 Left Temp"
     label temp2 "PVDD0P8 Temp"
     compute in3 @*2, @/2
     compute curr3 @*0.8686+0.9517, (@-0.9517)/0.8686
     compute curr4 @*1.0433+0.3926, (@-0.3926)/1.0433
     compute power1 @*2, @/2
     compute power3 @*2, @/2

chip "isl68137-i2c-1-60"
# power1: We the formula from Power engineer according to the power efficiency.
     label in1 "TH3 Core Input Voltage"
     label in3 "TH3 Core Output Voltage"
     label curr1 "TH3 Core Input Current"
     label curr3 "TH3 Core Output Current"
     label power1 "TH3 Core Input Power"
     label power3 "TH3 Core Output Power"
     label temp2 "TH3 Core Temp"
     compute power1 @*1.33, @/1.33
     ignore in2
     ignore curr2
     ignore power2
     ignore temp1
     ignore temp3
     ignore temp4
